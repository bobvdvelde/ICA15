{
    "contents" : "source('backbone.r')\n\n## demodata: een netwerk van 162 woorden (unieke woorden uit top 10 voor 25 topics van een LDA model)\n## Voor alle woorden is de conditionele probabiliteit (g, g_demo.rdata) en de cosinus afstand (g_undir, g_demo_undir.rdata) berekend over 133.684 NYT artikelen over \"nuclear\").\n\n## test of resultaten van nieuwe functie (backbone) overeenkomen met disparityfilter functie (get.backbone)\nalpha = 0.001\n\n# directed\nload('g_demo.rdata')\nE(g)$alpha = backbone(g)\nel_1 = get.edgelist(delete.edges(g, which(E(g)$alpha >= alpha)))\nel_2 = get.edgelist(get.backbone(g, alpha, directed=T))\n\nel_1 = paste(el_1[,1], el_1[,2])\nel_2 = paste(el_2[,1], el_2[,2])\nel_1 %in% el_2\n\n\n# undirected\nload('g_demo_undir.rdata')\nE(g_undir)$alpha = backbone(g_undir)\nel_1 = get.edgelist(delete.edges(g_undir, which(E(g_undir)$alpha >= alpha)))\nel_2 = get.edgelist(get.backbone(g_undir, alpha, directed=F))\n\nel_1 = rbind(el_1, el_1[,2:1]) # stomme hack omdat ik niet weet hoe ik onafhankelijk van volgorde kan vergelijken :p\nel_2 = rbind(el_2, el_2[,2:1])\nel_1 = apply(el_1, 1, function(x) list(x))\nel_2 = apply(el_2, 1, function(x) list(x))\n\nel_1 = paste(el_1[,1], el_1[,2])\nel_2 = paste(el_2[,1], el_2[,2])\nel_1 %in% el_2\n\n\nset",
    "created" : 1432078916280.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3450500127",
    "id" : "86D6D434",
    "lastKnownWriteTime" : 1432078912,
    "path" : "C:/Users/Bob/AppData/Local/Temp/test_backbone_function.r",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}